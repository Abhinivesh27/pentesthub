from flask import Flask, jsonify, request, make_response
from androguard.misc import AnalyzeAPK
import json

app = Flask(__name__)

@app.route('/analyze_apk', methods=['POST'])
def analyze_apk():
    # Get the APK file bytes from the request body
    apk_file_bytes = request.get_data()
    
    # Check if the file is a valid APK file
    if apk_file_bytes[:4] != b'PK\x03\x04':
        return jsonify({'error': 'Invalid file type. Must be APK file.'}), 400
    
    # # Store the APK file bytes in a session variable
    # session = apk_file_bytes
    # try:
    #     _, _, analysis = AnalyzeAPK(apk_file_bytes)
    # except Exception as e:
    #     return jsonify({'error': 'Failed to analyze APK file: {}'.format(str(e))}), 200
    
    # Return a 202 status code to indicate that the analysis is in progress
    response_data = {
        'package_name': "com.example.pentesthub",
        'version_name': "2.0.3",
        'permissions': ["Internet","Contacts","Camera","Storage"],
        'activities': ["Main activity"],
    }
    
    return (jsonify(response_data), 202, {'Access-Control-Allow-Origin': '*'})

@app.route('/analyze_apk', methods=['GET'])
def get_apk_analysis():
   
    # Create a JSON response with the APK information
    response_data = {
        'package_name': "package_name",
        'version_name': "version_name",
        'permissions': "permissions"
    }
    
    return jsonify(response_data), 200
if __name__ == '__main__':
    app.run(debug=True)
